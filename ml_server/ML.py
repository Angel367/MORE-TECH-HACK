import sys

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split 
from sklearn.linear_model import LinearRegression 
from sklearn import metrics


from panda import Export_predict_services_CSV

f = open('output.txt', 'w', encoding="utf-8")
sys.stdout = f

Bank_ID = 0
lastday = 4

y = [
        5,  5,  6,  5,  6,
        5,  6,  6,  5,  5,
        6,  6,  6,  7,  8,
        8,  8,  7,  8,  13,
        10, 11, 9,  11, 14,
        13, 12, 13, 13, 12,
        14, 13, 15, 13, 10,
        16, 11, 12, 10, 9,
        16, 13, 10, 15
    ] 

x = [
        [
            0, 1, 2, 3, 4,      # списоп из рабочих дней в формате id
            0, 1, 2, 3, 4,      # 0 - пн
            0, 1, 2, 3, 4,      # 1 - вт
            0, 1, 2, 3, 4,      # 2 - ср
            0, 1, 2, 3, 4,      # 3 - чт
            0, 1, 2, 3, 4,      # 4 - пт
            0, 1, 2, 3, 4,      # 5 - сб
            0, 1, 2, 3, 4,      # 6 - вс
            0, 1, 2, 3          
        ],
        [
            0, 0, 0, 0, 0,      # список из промежутков времени в рабочий день
            1, 1, 1, 1, 1,      # 0 ->  9:00 - 10:00
            2, 2, 2, 2, 2,      # 1 -> 10:00 - 11:00
            3, 3, 3, 3, 3,      # 2 -> 11:00 - 12:00
            4, 4, 4, 4, 4,      # 3 -> 12:00 - 13:00
            5, 5, 5, 5, 5,      # 4 -> 13:00 - 14:00
            6, 6, 6, 6, 6,      # 5 -> 15:00 - 16:00
            7, 7, 7, 7, 7,      # 6 -> 16:00 - 17:00
            8, 8, 8, 8          # и т.д.
        ]
    ]

lastday = 4
# формируем DataFrame из двух списков
new_y = np.array(y) 
new_y = new_y.transpose() 
df1 = pd.DataFrame(new_y) 

new_X = np.array(x) 
new_X = new_X.transpose() 
df2 = pd.DataFrame(new_X) 

# назначаем ключи каждому полю исходных датафреймов
df1 = df1.rename(columns = {0: 'Время ожидания'}, inplace = False)
df2 = df2.rename(columns = {0: 'День', 1: 'Временной промежуток'}, inplace = False)
frames = [df1, df2] 
dataset = pd.concat([df1, df2], axis=1, join="inner") 


print(dataset.head())
print()

# разделим данные на метки и атрибуты 
X = dataset[['День', 'Временной промежуток']]
y = dataset['Время ожидания']



# разделим данные на обучающую и тестовую выборки
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state = 20)


#для обучения алгоритма мы выполняем тот же код, что и раньше, используя метод fit() класса LinearRegression 
regressor = LinearRegression()

regressor.fit(X_train, y_train)
# scaled encoded

#выведем коэффициенты модели
coeff_df = pd.DataFrame(regressor.coef_, X.columns, columns=['Coefficient']) 
print(coeff_df)
print()
# Чтобы сделать прогнозы на тестовых данных, выполните следующий код 
y_pred = regressor.predict(X_test) 
df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred}) 
print(df)
print()
#Последний шаг - оценить производительность алгоритма. Мы сделаем это, найдя значения для MSE
print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))


print('-------------------------------------------------------------------')

# составить прогноз на неделю по временным инетрвалам для услуг банка
bank_USLIGI_INFO = {
    # УСЛУГА 1 = Вклады
    'f1':[
            # список из рабочих дней в формате id
            [
                0, 1, 2, 3, 4,      # список из рабочих дней в формате id
                0, 1, 2, 3, 4,      # 0 - пн
                0, 1, 2, 3, 4,      # 1 - вт
                0, 1, 2, 3, 4,      # 2 - ср
                0, 1, 2, 3, 4,      # 3 - чт
                0, 1, 2, 3, 4,      # 4 - пт
                0, 1, 2, 3, 4,      # 5 - сб
                0, 1, 2, 3, 4,      # 6 - вс
                0, 1, 2, 3          
            ],
            # список из промежутков времени в рабочий день
            [
                0, 0, 0, 0, 0,      # список из промежутков времени в рабочий день
                1, 1, 1, 1, 1,      # 0 ->  9:00 - 10:00
                2, 2, 2, 2, 2,      # 1 -> 10:00 - 11:00
                3, 3, 3, 3, 3,      # 2 -> 11:00 - 12:00
                4, 4, 4, 4, 4,      # 3 -> 12:00 - 13:00
                5, 5, 5, 5, 5,      # 4 -> 13:00 - 14:00
                6, 6, 6, 6, 6,      # 5 -> 15:00 - 16:00
                7, 7, 7, 7, 7,      # 6 -> 16:00 - 17:00
                8, 8, 8, 8          # и т.д.
            ]
        ],
    # УСЛУГА 2 = кредиты
    'f2':[
            # список из рабочих дней в формате id
            [
                0, 1, 2, 3, 4,      # список из рабочих дней в формате id
                0, 1, 2, 3, 4,      # 0 - пн
                0, 1, 2, 3, 4,      # 1 - вт
                0, 1, 2, 3, 4,      # 2 - ср
                0, 1, 2, 3, 4,      # 3 - чт
                0, 1, 2, 3, 4,      # 4 - пт
                0, 1, 2, 3, 4,      # 5 - сб
                0, 1, 2, 3, 4,      # 6 - вс
                0, 1, 2, 3          
            ],
            # список из промежутков времени в рабочий день
            [
                0, 0, 0, 0, 0,      # список из промежутков времени в рабочий день
                1, 1, 1, 1, 1,      # 0 ->  9:00 - 10:00
                2, 2, 2, 2, 2,      # 1 -> 10:00 - 11:00
                3, 3, 3, 3, 3,      # 2 -> 11:00 - 12:00
                4, 4, 4, 4, 4,      # 3 -> 12:00 - 13:00
                5, 5, 5, 5, 5,      # 4 -> 13:00 - 14:00
                6, 6, 6, 6, 6,      # 5 -> 15:00 - 16:00
                7, 7, 7, 7, 7,      # 6 -> 16:00 - 17:00
                8, 8, 8, 8          # и т.д.
            ]
        ],
    # УСЛУГА 3 = Страхование
    'f3':[
            # списоп из рабочих дней в формате id
            [
                0, 1, 2, 3, 4,      # списоп из рабочих дней в формате id
                0, 1, 2, 3, 4,      # 0 - пн
                0, 1, 2, 3, 4,      # 1 - вт
                0, 1, 2, 3, 4,      # 2 - ср
                0, 1, 2, 3, 4,      # 3 - чт
                0, 1, 2, 3, 4,      # 4 - пт
                0, 1, 2, 3, 4,      # 5 - сб
                0, 1, 2, 3, 4,      # 6 - вс
                0, 1, 2, 3          
            ],
            # список из промежутков времени в рабочий день
            [
                0, 0, 0, 0, 0,      # список из промежутков времени в рабочий день
                1, 1, 1, 1, 1,      # 0 ->  9:00 - 10:00
                2, 2, 2, 2, 2,      # 1 -> 10:00 - 11:00
                3, 3, 3, 3, 3,      # 2 -> 11:00 - 12:00
                4, 4, 4, 4, 4,      # 3 -> 12:00 - 13:00
                5, 5, 5, 5, 5,      # 4 -> 13:00 - 14:00
                6, 6, 6, 6, 6,      # 5 -> 15:00 - 16:00
                7, 7, 7, 7, 7,      # 6 -> 16:00 - 17:00
                8, 8, 8, 8          # и т.д.
            ]
        ]
    }

bank_USLIGI_PREDICT = {}

for Key in bank_USLIGI_INFO:
    xTEST = np.array(bank_USLIGI_INFO[Key])
    xTEST = xTEST.transpose()
    xf = pd.DataFrame(xTEST)
    xf = xf.rename(columns = {0: 'День', 1: 'Временной промежуток'}, inplace = False)
    # print(xf)
    xTESTPredict = regressor.predict(xf)

    bank_USLIGI_PREDICT[Key] = xTESTPredict


print(bank_USLIGI_PREDICT)



# 1 массив - отделение
# 2 массив - день
# 3 массив - временной интервал

# xTESTPredict = regressor.predict(xf)


path = Export_predict_services_CSV(bank_USLIGI_PREDICT, Bank_ID, lastday)

print(path)

f.close()